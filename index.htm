<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="pl" lang="pl"> 
	<head> 
		<meta http-equiv="Content-Type" content="text/html" charset="iso-8859-2" />
		<link href="css/style.css" rel="stylesheet" type="text/css" />		
		<title>CRUD Frontend Application</title> 
		<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
		<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.5.7/angular.min.js"></script>
		<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-animate.js"></script>
		<link href='http://fonts.googleapis.com/css?family=Lato:400,700' rel='stylesheet' type='text/css'>
	</head> 

	<body ng-app="CRUDApp">
		<div id="mainContent" ng-controller="CRUDAppController">
			<div id="tableHeader">
				<h2 id="tableName">Tabela nr 1</h2>
				<h4 id="tableDesc">
					Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam tempor eros convallis nisi vehicula gravida. Vivamus ultricies mi a risus egestas tempor. Donec mollis, nulla sit amet tempor vulputate, libero dui placerat libero, ultrices dapibus risus massa et urna. 
				</h4>
				<div id="operations">
					<label>rows number</label>
					<input type="number" />
					<button ng-click="addPerson()" ng-hide="showForm">add record</button>
					<button>delete records</button>
				</div>
			</div>
			<div id="succMsg" class="msg" ng-show="succMsg!=''">
				{{succMsg}}
				<span class="close" href="#" ng-click="deleteMsg('succ')">[close]</span>
			</div>
			<div id="errMsg" class="msg" ng-show="errMsg!=''">
				{{errMsg}}
				<span class="close" href="#" ng-click="deleteMsg('err')">[close]</span>
			</div>
			<div id="formContent" ng-show="showForm">
				<form novalidate name="personForm">
					<span ng-init="initGlobalVariables()"></span>
					
					<crud-input 
						type="text"
						name="name"
						errormessages="errorMessages.name"
						model="person.name"
						assignparams="assignParams.name"
						change="assign(assgnprms)"
						validations="validations.name"
						desc="to jest opis pola name">
						Name:
					</crud-input >
					
					<crud-input 
						type="text"
						name="surname"
						model="person.surname"
						errormessages="errorMessages.surname"
						assignparams="assignParams.surname"
						change="assign(assgnprms)" 
						validations="validations.surname">
						Surname:
					</crud-input >
					
					<crud-input 
						type="text"
						name="pesel"
						model="person.pesel"
						errormessages="errorMessages.pesel"
						assignparams="assignParams.pesel"
						change="assign(assgnprms)" 
						valid="evalPattern(params)"
						validations="validations.pesel"
						updateon="blur"
						desc="to jest opis pola pesel">
						Pesel:
					</crud-input >
					
					<crud-input 
						type="text"
						disabled="true"
						name="dateOfBirth"
						model="person.dateOfBirth"
						errormessages="errorMessages.dateOfBirth"
						assignparams="assignParams.dateOfBirth"
						change="assign(assgnprms)" 
						valid="evalPattern(params)"
						validations="validations.dateOfBirth"
						desc="to jest opis pola dateOfBirth">
						Date of birth:
					</crud-input >
					
					<crud-input 
						type="number"
						name="salary"
						model="person.salary"
						errormessages="errorMessages.salary"
						assignparams="assignParams.salary"
						change="assign(assgnprms)" 
						updateon="blur"
						validations="validations.salary"
						desc="to jest opis pola salary">
						Salary:
					</crud-input >
					
					<div class="crud-formItem">
						<crud-label desc="This field will be filled automatically once you fill field 'pesel'">Sex:</crud-label>
						<select disabled='disabled' name="sex" ng-init="fieldsDefinitions.sex=[{'id':'male', 'name':'Male'}, {'id':'female', 'name':'Female'}]" ng-model="person.sex">
							<option></option>
							<option ng-repeat="item in fieldsDefinitions.sex" ng-selected="person.sex==item.id" value="{{item.id}}">
								{{item.name}}
							</option>
						</select>
					</div>
					
					<crud-input 
						type="text"
						name="pseudonym"
						model="person.pseudonym"
						errormessages="errorMessages.pseudonym"
						assignparams="assignParams.pseudonym"
						change="assign(assgnprms)" 
						valid="evalPattern(params)"
						validations="validations.pseudonym"
						desc="This field will be filled automatically by default once you fill fields 'name' and 'surname'. You can change its value">
						Pseudonym:
					</crud-input >
					
					<div class="crud-formItem">
						<crud-label>Interestings:</crud-label>
						<fieldset class="group" ng-init="fieldsDefinitions.interestings=[{'id':'football', 'name':'Football'}, {'id':'poetry', 'name':'Poetry'}, {'id':'politicans', 'name':'Politicans'}]">
							<label ng-repeat="item in fieldsDefinitions.interestings">
								<input type="checkbox" name="interestings" ng-click="updateModelChbx(person.interestings, item.id)" ng-value="{{item.id}}" ng-checked="person.interestings.indexOf(item.id) > -1"> 
								{{item.name}}
							</label>
						</fieldset>
					</div>
					<crud-input
						type="radio"
						name="vehicle"
						model="person.vehicle"
						desc="Select your vehicle"
						errormessages="errorMessages.vehicle"
						change="assign(assgnprms)" 
						valid="evalPattern(params)"
						validations="validations.vehicle"
						availableopts="[{'id':'car', 'name':'Car'}, {'id':'train', 'name':'Train'}, {'id':'bike', 'name':'Bike'}, {'id':'motorbike', 'name':'Motorike'}]">
						Vehicle:
					</crud-input>
					
					<div class="crud-formItem">
						<crud-label>Advantages:</crud-label><br/>
						<select name="advantages" ng-model="person.advantages" ng-init="fieldsDefinitions.advantages=[{'id':'punctual', 'name':'Punctual'}, {'id':'conscientious', 'name':'Conscientious'}, {'id':'smart', 'name':'Smart'}]" multiple>
							<option ng-repeat="item in fieldsDefinitions.advantages" value="{{item.id}}">
								{{item.name}}
							</option>
							
						</select>
					</div>
					
					<crud-input 
						type="text"
						name="dateOfAffiliating"
						model="person.dateOfAffiliating"
						errormessages="errorMessages.dateOfAffiliating"
						assignparams="assignParams.dateOfAffiliating"
						change="assign(assgnprms)" 
						valid="evalPattern(params)"	
						validations="validations.dateOfAffiliating"
						desc="to jest opis pola dateOfAffiliating"
						updateon="blur">
						Date of affiliating:
					</crud-input>
					
					<div class="bttns">
						<button ng-click="toggleForm()">Cancel</button>
						<button ng-click="savePerson()">Submit</button>
					</div>
				</form>
			</div>
			<div id="tableContent">
				<table>
					<thead>
						<tr>
							<td>#</td>
							<td>Name</td>
							<td>Surname</td>
							<td>Pesel</td>
							<td>Date of birth</td>
							<td>Salary</td>
							<td>Sex</td>
							<td>Pseudonym</td>
							<td>Interestings</td>
							<td>Vehicle</td>
							<td>Advantages</td>
							<td>Date of affiliating</td>
							<td>Operations</td>
						<tr>
					</thead>	
					<tbody>
						<tr ng-repeat="person in persons">
							<td>{{$index+1}}</td>
							<td>{{person.name}}</td>
							<td>{{person.surname}}</td>
							<td>{{person.pesel}}</td>
							<td>{{person.dateOfBirth}}</td>
							<td>{{person.salary}}</td>
							<td>{{person.sex}}</td>
							<td>{{person.pseudonym}}</td>
							<!-- TODO odfiltrowaæ nawiasy itd -->
							<td>{{person.interestings}}</td>
							<td>{{person.vehicle}}</td>
							<td>{{person.advantages}}</td>
							<td>{{person.dateOfAffiliating}}</td>
							<td class="operationsColumn">
								<span class="bttns">
									<button ng-click="editPerson(person.pesel)">edit</button>
									<button ng-click="deletePerson(person.pesel)">delete</button>
								</span>
								<span class="select">
									<input type="checkbox" />
								</span>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
		
		<script>
			//Application configuration data (definitions of fields ect):
			
			var crudErrors = {
				'delete': 'Internal error while deleting person',
				'update': 'Internal error while updating person',
				'add': 'Internal error while adding person',
			};
			
		</script>
		
		<script src="js/app.js"></script>
		<script src="js/filters.js"></script>
		<script src="js/services.js"></script>
		<script src="js/components.js"></script>
		<script src="js/controller.js"></script>
	</body> 
</html> 